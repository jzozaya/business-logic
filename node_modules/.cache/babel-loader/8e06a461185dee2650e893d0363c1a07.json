{"ast":null,"code":"var _jsxFileName = \"/Users/jorgezozaya/Downloads/Abaraja\\u0301me/freelance/business-logic/src/components/Scheduling.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport { Header } from './Header';\nimport \"react-day-picker/lib/style.css\";\nimport { CalendarControlsWrap } from './bookingControls/CalendarControlsWrap';\nexport const Scheduling = ({\n  formData,\n  setFormData,\n  nextStep,\n  prevStep\n}) => {\n  const [direction, setDirection] = useState('back');\n  const [nextButtonDisabled, setNextButtonDisabled] = useState(true);\n  let buttonClasses = nextButtonDisabled ? 'disabled' : '';\n\n  if (formData.dateDropOff !== null && formData.datePickUp !== null) {\n    buttonClasses = '';\n  }\n\n  const parentFunction = dateData => {\n    if (dateData.kind === 'end') {\n      if (dateData.stringDate === null) {\n        setNextButtonDisabled(true);\n      } else {\n        setNextButtonDisabled(false);\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    title: \"Enter Personal Details\",\n    step: \"Three\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"introWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Scheduling\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Please select a date and time to drop-off and pick-up totes\")), React.createElement(Formik, {\n    initialValues: formData,\n    onSubmit: values => {\n      direction === 'back' ? prevStep() : nextStep();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, () => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CalendarControlsWrap, {\n    formData: formData,\n    setFormData: setFormData,\n    origin: \"Scheduling\",\n    parentFunction: parentFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl submitControl fullLenght\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"whiteBtn\",\n    type: \"submit\",\n    onClick: () => prevStep(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Previous\")), React.createElement(\"button\", {\n    className: buttonClasses,\n    type: \"submit\",\n    onClick: () => setDirection('next'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Next\"))))));\n};\nScheduling.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n  prevStep: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/jorgezozaya/Downloads/Abarajáme/freelance/business-logic/src/components/Scheduling.js"],"names":["React","useState","PropTypes","Formik","Form","Header","CalendarControlsWrap","Scheduling","formData","setFormData","nextStep","prevStep","direction","setDirection","nextButtonDisabled","setNextButtonDisabled","buttonClasses","dateDropOff","datePickUp","parentFunction","dateData","kind","stringDate","values","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport { Header } from './Header';\nimport \"react-day-picker/lib/style.css\";\nimport { CalendarControlsWrap } from './bookingControls/CalendarControlsWrap';\n\nexport const Scheduling = ({\n    formData,\n    setFormData,\n    nextStep,\n    prevStep\n    }) => {\n    const [direction, setDirection] = useState('back');\n    const [nextButtonDisabled, setNextButtonDisabled] = useState(true);\n    let buttonClasses = (nextButtonDisabled) ? 'disabled' : ''\n    if(formData.dateDropOff !== null && formData.datePickUp !== null) {\n        buttonClasses = ''\n    }\n    const parentFunction = ( dateData ) => {\n        if(dateData.kind === 'end'){\n            if(dateData.stringDate === null){\n                setNextButtonDisabled(true)\n            }else{\n                setNextButtonDisabled(false)\n            }\n        }\n    }\n    return (\n        <>\n        <Header title='Enter Personal Details' step=\"Three\"/>\n        <div className=\"introWrap\">\n            <h2>Scheduling</h2>\n            <p>Please select a date and time to drop-off and pick-up totes</p>\n        </div>\n            <Formik\n                initialValues={formData}\n                onSubmit={values => {\n                    direction === 'back' ? prevStep() : nextStep();\n                }}\n            >\n            {() => (\n                <Form>\n                    <CalendarControlsWrap\n                        formData={formData}\n                        setFormData={setFormData}\n                        origin=\"Scheduling\"\n                        parentFunction={parentFunction}\n                    />\n                    \n                    <div className=\"formControl submitControl fullLenght\">\n                    <button className=\"whiteBtn\" type=\"submit\" onClick={() => prevStep()}>\n                        <span>Previous</span>\n                    </button>\n                    <button className={buttonClasses} type=\"submit\" onClick={() => setDirection('next')}>\n                        <span>Next</span>\n                    </button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n        </>\n    );\n};\n\nScheduling.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n  prevStep: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}