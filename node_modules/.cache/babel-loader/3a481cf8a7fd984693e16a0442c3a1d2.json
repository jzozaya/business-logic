{"ast":null,"code":"var _jsxFileName = \"/Users/jorgezozaya/Downloads/Abaraja\\u0301me/freelance/business-logic/src/components/Confirm.js\";\nimport React, { useState } from 'react'; //import PropTypes from 'prop-types';\n\nimport { Header } from './Header';\nimport { CalendarControlsWrap } from './bookingControls/CalendarControlsWrap';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nconst validationSchemaFourthStep = yup.object({\n  cardHolderNameFiled: yup.string().required('Name is required'),\n  cardNumberField: yup.string().required('Card number is required'),\n  expirationDateField: yup.string().required('Expiration date is required')\n});\n\nconst validateZipCode = value => {\n  let stringValue = value + '';\n  let error;\n\n  if (!value) {\n    error = 'Zip code required';\n  } else if (stringValue.length > 5) {\n    error = 'postal code is 5 digits';\n  } else if (stringValue.length < 5) {\n    error = 'postal code is 5 digits';\n  }\n\n  return error;\n};\n\nconst validateCVVCode = value => {\n  let stringValue = value + '';\n  let error;\n\n  if (!value) {\n    error = 'CVV required';\n  } else if (stringValue.length > 3) {\n    error = 'CVV code is 3 digits';\n  } else if (stringValue.length < 3) {\n    error = 'CVV code is 3 digits';\n  }\n\n  return error;\n};\n\nexport const Confirm = ({\n  formData,\n  setFormData,\n  prevStep,\n  nextStep\n}) => {\n  const [direction, setDirection] = useState('back');\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    title: \"Confirm User Data\",\n    step: \"Five\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"introWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Order Confirmation\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Please fill out your contact information as Delivery and Pick-Up addresses\")), React.createElement(Formik, {\n    initialValues: formData,\n    onSubmit: values => {\n      setFormData(values);\n      direction === 'back' ? prevStep() : nextStep();\n      console.log('AddressFormStep submit >>>> ', values);\n    },\n    validationSchema: validationSchemaFourthStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Payment Information\"), React.createElement(\"label\", {\n    htmlFor: \"cardHolderNameInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Cardholder Name\"), React.createElement(Field, {\n    id: \"cardHolderNameInput\",\n    name: \"cardHolderNameFiled\",\n    placeholder: \"Jane Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), errors.cardHolderNameFiled && touched.cardHolderNameFiled && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, errors.cardHolderNameFiled)), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cardNumberInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Card Number\"), React.createElement(Field, {\n    id: \"cardNumberInput\",\n    name: \"cardNumberField\",\n    placeholder: \"XXXX-XXXX-XXXX-XXXX\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), errors.cardNumberField && touched.cardNumberField && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, errors.cardNumberField)), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl inlineFields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapBillingInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"expirationDateInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Expiration Date\"), React.createElement(Field, {\n    id: \"expirationDateInput\",\n    name: \"expirationDateField\",\n    placeholder: \"MM/YYYY\",\n    type: \"string\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), errors.expirationDateField && touched.expirationDateField && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, errors.expirationDateField)), React.createElement(\"div\", {\n    className: \"wrapBillingInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cvvInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"CVV\"), React.createElement(Field, {\n    id: \"cvvInput\",\n    name: \"cvvField\",\n    placeholder: \"3 digit code\",\n    type: \"number\",\n    validate: validateCVVCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), errors.cvvField && touched.cvvField && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, errors.cvvField))), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"billingZipCode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Billing Zip Code\"), React.createElement(Field, {\n    name: \"billingZipCode\",\n    placeholder: \"zip code\",\n    type: \"number\",\n    validate: validateZipCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), errors.billingZipCode && touched.billingZipCode && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, errors.billingZipCode)), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Order Details\"), React.createElement(\"div\", {\n    className: \"rowDetailWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"35 Totes (1 Week)\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"$120\")), React.createElement(\"div\", {\n    className: \"rowDetailWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Additional Day x 4\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"$120\")), React.createElement(\"div\", {\n    className: \"rowDetailWrap disccountStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Additional Day x 4\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"$120\"))), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl inlineFields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapBillingInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"expirationDateInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Expiration Date\"), React.createElement(Field, {\n    id: \"expirationDateInput\",\n    name: \"expirationDateField\",\n    placeholder: \"MM/YYYY\",\n    type: \"string\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), errors.expirationDateField && touched.expirationDateField && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, errors.expirationDateField)), React.createElement(\"div\", {\n    className: \"wrapBillingInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"transparent\",\n    htmlFor: \"expirationDateInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Apply\"), React.createElement(\"button\", {\n    className: \"whiteBtn\",\n    onClick: () => console.log('hola'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Apply\")))), React.createElement(\"div\", {\n    className: \"formControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(CalendarControlsWrap, {\n    formData: formData,\n    setFormData: setFormData,\n    origin: \"Confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"formControl submitControl fullLenght\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"whiteBtn\",\n    type: \"submit\",\n    onClick: () => prevStep(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Previous\")), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submitOrder\",\n    onClick: () => setDirection('next'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Submit Order\"))))), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, JSON.stringify(formData, null, 2)));\n};","map":{"version":3,"sources":["/Users/jorgezozaya/Downloads/Abarajáme/freelance/business-logic/src/components/Confirm.js"],"names":["React","useState","Header","CalendarControlsWrap","Formik","Form","Field","yup","validationSchemaFourthStep","object","cardHolderNameFiled","string","required","cardNumberField","expirationDateField","validateZipCode","value","stringValue","error","length","validateCVVCode","Confirm","formData","setFormData","prevStep","nextStep","direction","setDirection","values","console","log","errors","touched","cvvField","billingZipCode","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n//import PropTypes from 'prop-types';\nimport { Header } from './Header';\nimport { CalendarControlsWrap } from './bookingControls/CalendarControlsWrap'\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchemaFourthStep = yup.object({\n  cardHolderNameFiled: yup\n    .string()\n    .required('Name is required'),\n  cardNumberField: yup\n    .string()\n    .required('Card number is required'),\n  expirationDateField: yup\n    .string()\n    .required('Expiration date is required'),\n    \n    \n});\n\nconst validateZipCode = value => {\n\n  let stringValue = value + ''\n  let error;\n    if (!value) {\n      error = 'Zip code required';\n    } else if (stringValue.length > 5) {\n      error = 'postal code is 5 digits';\n    } else if (stringValue.length < 5) {\n      error = 'postal code is 5 digits';\n    }\n    return error;\n};\n\nconst validateCVVCode = value => {\n\n  let stringValue = value + ''\n  let error;\n    if (!value) {\n      error = 'CVV required';\n    } else if (stringValue.length > 3) {\n      error = 'CVV code is 3 digits';\n    } else if (stringValue.length < 3) {\n      error = 'CVV code is 3 digits';\n    }\n    return error;\n};\n\nexport const Confirm = ({ \n    formData, \n    setFormData,\n    prevStep, \n    nextStep }) => {\n    const [direction, setDirection] = useState('back');\n\n  return (\n    <>\n      <Header title='Confirm User Data' step=\"Five\"/>\n      <div className=\"introWrap\">\n        <h2>Order Confirmation</h2>\n        <p>Please fill out your contact information as Delivery and Pick-Up addresses</p>\n        \n      </div>\n\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          \n          setFormData(values);\n          direction === 'back' ? prevStep() : nextStep();\n          console.log('AddressFormStep submit >>>> ', values)\n        }}\n        validationSchema={validationSchemaFourthStep}\n        >\n        {({ errors, touched }) => (\n          <Form>\n            <div className=\"formControl\">\n                <h3>Payment Information</h3>\n                <label htmlFor=\"cardHolderNameInput\">Cardholder Name</label>\n                <Field \n                  id=\"cardHolderNameInput\"\n                  name='cardHolderNameFiled' \n                  placeholder=\"Jane Doe\"\n                  />\n                {errors.cardHolderNameFiled && touched.cardHolderNameFiled && <div className=\"errorMessage\">{errors.cardHolderNameFiled}</div>}\n            </div>\n            <div className=\"formControl\"></div>\n            <div className=\"formControl\">\n                <label htmlFor=\"cardNumberInput\">Card Number</label>\n                <Field \n                  id=\"cardNumberInput\"\n                  name='cardNumberField' \n                  placeholder=\"XXXX-XXXX-XXXX-XXXX\"\n                  />\n                  {errors.cardNumberField && touched.cardNumberField && <div className=\"errorMessage\">{errors.cardNumberField}</div>}\n            </div>\n            <div className=\"formControl\"></div>\n            \n            <div className=\"formControl inlineFields\">\n              <div className=\"wrapBillingInline\">\n                  <label htmlFor=\"expirationDateInput\">Expiration Date</label>\n                  <Field \n                    id=\"expirationDateInput\"\n                    name='expirationDateField' \n                    placeholder=\"MM/YYYY\"\n                    type=\"string\"\n                    />\n                    {errors.expirationDateField && touched.expirationDateField && <div className=\"errorMessage\">{errors.expirationDateField}</div>}\n              </div>\n              <div className=\"wrapBillingInline\">\n                  <label htmlFor=\"cvvInput\">CVV</label>\n                  <Field \n                    id=\"cvvInput\"\n                    name='cvvField' \n                    placeholder=\"3 digit code\"\n                    type=\"number\"\n                    validate={validateCVVCode}\n                    />\n                    {errors.cvvField && touched.cvvField && <div className=\"errorMessage\">{errors.cvvField}</div>}\n              </div>\n            </div>\n            \n            <div className=\"formControl\">\n            </div>\n            <div className=\"formControl\">\n              <label htmlFor=\"billingZipCode\">Billing Zip Code</label>\n              <Field \n                name='billingZipCode' \n                placeholder=\"zip code\"\n                type=\"number\"\n                validate={validateZipCode}\n                />\n                {errors.billingZipCode && touched.billingZipCode && <div className=\"errorMessage\">{errors.billingZipCode}</div>}\n            </div>\n\n            <div className=\"formControl\"></div>\n            <div className=\"formControl\">\n                <h3>Order Details</h3>\n                <div className=\"rowDetailWrap\">\n                  <p>35 Totes (1 Week)</p>\n                  <span>$120</span>\n                </div>\n                <div className=\"rowDetailWrap\">\n                  <p>Additional Day x 4</p>\n                  <span>$120</span>\n                </div>\n                <div className=\"rowDetailWrap disccountStyle\">\n                  <p>Additional Day x 4</p>\n                  <span>$120</span>\n                </div>\n            </div>\n\n            <div className=\"formControl\">\n            </div>\n\n            <div className=\"formControl inlineFields\">\n              <div className=\"wrapBillingInline\">\n                  <label htmlFor=\"expirationDateInput\">Expiration Date</label>\n                  <Field \n                    id=\"expirationDateInput\"\n                    name='expirationDateField' \n                    placeholder=\"MM/YYYY\"\n                    type=\"string\"\n                    />\n                    {errors.expirationDateField && touched.expirationDateField && <div className=\"errorMessage\">{errors.expirationDateField}</div>}\n              </div>\n              <div className=\"wrapBillingInline\">\n                <label className=\"transparent\" htmlFor=\"expirationDateInput\">Apply</label>\n                <button className=\"whiteBtn\" onClick={() => console.log('hola') }>\n                  <span>Apply</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"formControl\">\n            </div>\n\n            <CalendarControlsWrap\n              formData={formData}\n              setFormData={setFormData}\n              origin=\"Confirm\"\n            />\n\n            <div className=\"formControl submitControl fullLenght\">\n              <button className=\"whiteBtn\" type=\"submit\" onClick={() => prevStep()}>\n                <span>Previous</span>\n              </button>\n              <button type=\"submit\" className=\"submitOrder\" onClick={() => setDirection('next')}>\n                <span>Submit Order</span>\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <pre>{JSON.stringify(formData, null, 2)}</pre>\n    \n    </>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}